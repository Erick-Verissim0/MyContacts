{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Erick Ver\\xEDssimo\\\\Desktop\\\\Estudo\\\\Projetos\\\\MyContacts\\\\front-end\\\\src\\\\Components\\\\ContactForm\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// Custom Hooks\nimport isEmailValid from '../../utils/isEmailValid';\nimport useErrors from '../../hooks/UseErrors';\nimport formatPhone from '../../utils/formatPhone';\n\n// Hooks\nimport FormGroup from '../FormGroup';\nimport Input from '../Input';\nimport Select from '../Select';\nimport Button from '../Button';\n\n// Styles\nimport { Form, ButtonContainer } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContactForm(_ref) {\n  _s();\n  let {\n    buttonLabel\n  } = _ref;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [category, setCategory] = useState('');\n  const [errors, setErrors] = useState([]);\n  const {\n    setError,\n    removeError,\n    getErrorMessageByFildName\n  } = useErrors();\n  const isFormValid = true;\n  function handleNameChange(event) {\n    setName(event.target.value);\n    if (!event.target.value) {\n      setError({\n        field: 'name',\n        message: 'Name is required.'\n      });\n    } else {\n      removeError('name');\n    }\n  }\n  function handleEmailChange(event) {\n    setEmail(event.target.value);\n    if (event.target.value && !isEmailValid(event.target.value)) {\n      setError({\n        field: 'email',\n        message: 'Email is required.'\n      });\n    } else {\n      removeError('email');\n    }\n  }\n  function handlePhoneChange(event) {\n    setPhone(formatPhone(event.target.value));\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log({\n      name,\n      email,\n      phone: phone.replace(/\\D/g, ''),\n      category\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      error: getErrorMessageByFildName('name'),\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        error: getErrorMessageByFildName('name'),\n        placeholder: \"Name\",\n        value: name,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      error: getErrorMessageByFildName('email'),\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        error: getErrorMessageByFildName('email'),\n        placeholder: \"E-mail\",\n        value: email,\n        onChange: handleEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        maxLength: \"15\",\n        placeholder: \"Phone\",\n        value: phone,\n        onChange: handlePhoneChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      value: category,\n      onChange: event => setCategory(event.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"instagram\",\n        children: \"Instagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"discord\",\n        children: \"Discord\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !isFormValids,\n        type: \"submit\",\n        children: buttonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ContactForm, \"Fneh20MZ/G+nsmWG7Xz+/ZMWyRM=\", false, function () {\n  return [useErrors];\n});\n_c = ContactForm;\nContactForm.prototypes = {\n  buttonLabel: PropTypes.string.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["useState","PropTypes","isEmailValid","useErrors","formatPhone","FormGroup","Input","Select","Button","Form","ButtonContainer","ContactForm","buttonLabel","name","setName","email","setEmail","phone","setPhone","category","setCategory","errors","setErrors","setError","removeError","getErrorMessageByFildName","isFormValid","handleNameChange","event","target","value","field","message","handleEmailChange","handlePhoneChange","handleSubmit","preventDefault","console","log","replace","isFormValids","prototypes","string","isRequired"],"sources":["C:/Users/Erick Ver√≠ssimo/Desktop/Estudo/Projetos/MyContacts/front-end/src/Components/ContactForm/index.js"],"sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Custom Hooks\r\nimport isEmailValid from '../../utils/isEmailValid';\r\nimport useErrors from '../../hooks/UseErrors';\r\nimport formatPhone from '../../utils/formatPhone';\r\n\r\n// Hooks\r\nimport FormGroup from '../FormGroup';\r\nimport Input from '../Input';\r\nimport Select from '../Select';\r\nimport Button from '../Button';\r\n\r\n// Styles\r\nimport { Form, ButtonContainer } from './styles';\r\n\r\nexport default function ContactForm({ buttonLabel }) {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const { setError, removeError, getErrorMessageByFildName } = useErrors();\r\n\r\n  const isFormValid = true;\r\n\r\n  function handleNameChange(event) {\r\n    setName(event.target.value);\r\n\r\n    if (!event.target.value) {\r\n      setError({ field: 'name', message: 'Name is required.' });\r\n    } else {\r\n      removeError('name');\r\n    }\r\n  }\r\n\r\n  function handleEmailChange(event) {\r\n    setEmail(event.target.value);\r\n\r\n    if (event.target.value && !isEmailValid(event.target.value)) {\r\n      setError({ field: 'email', message: 'Email is required.' });\r\n    } else {\r\n      removeError('email');\r\n    }\r\n  }\r\n\r\n  function handlePhoneChange(event) {\r\n    setPhone(formatPhone(event.target.value));\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    console.log({ name, email, phone: phone.replace(/\\D/g, ''), category });\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit} noValidate>\r\n      <FormGroup error={getErrorMessageByFildName('name')}>\r\n        <Input\r\n          error={getErrorMessageByFildName('name')}\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n        />\r\n      </FormGroup>\r\n\r\n      <FormGroup error={getErrorMessageByFildName('email')}>\r\n        <Input\r\n          type=\"email\"\r\n          error={getErrorMessageByFildName('email')}\r\n          placeholder=\"E-mail\"\r\n          value={email}\r\n          onChange={handleEmailChange}\r\n        />\r\n      </FormGroup>\r\n\r\n      <FormGroup>\r\n        <Input\r\n          maxLength=\"15\"\r\n          placeholder=\"Phone\"\r\n          value={phone}\r\n          onChange={handlePhoneChange}\r\n        />\r\n      </FormGroup>\r\n\r\n      <Select\r\n        value={category}\r\n        onChange={(event) => setCategory(event.target.value)}\r\n      >\r\n        <option value=\"\">Category</option>\r\n        <option value=\"instagram\">Instagram</option>\r\n        <option value=\"discord\">Discord</option>\r\n      </Select>\r\n\r\n      <ButtonContainer>\r\n        <Button disabled={!isFormValids} type=\"submit\">\r\n          {buttonLabel}\r\n        </Button>\r\n      </ButtonContainer>\r\n    </Form>\r\n  );\r\n}\r\n\r\nContactForm.prototypes = {\r\n  buttonLabel: PropTypes.string.isRequired,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}